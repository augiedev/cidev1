<apex:page showHeader="true" controller="pca.SettingsController">
    <apex:includeScript value="{!$Resource.pca__LookupComponent}"/>
    <apex:sectionHeader title="Postcode Anywhere" subtitle="Account Management and Settings" help="{!$Page.pca__Instructions}"/>
    <apex:form id="Management">
        <apex:pageblock id="Settings" title="Settings" mode="edit">
            <apex:pageMessages id="pageErrors"></apex:pageMessages>
            <apex:pageBlockButtons >
                <apex:commandButton action="{!UpdateSettings}" value="Save" id="btnUpdate" oncomplete="SaveMessage()"/>
            </apex:pageBlockButtons>
            <apex:pageblockSection id="Account" title="Account">
                <apex:inputField value="{!Settings.pca__Click_License__c}" id="StandardKey"/>
                <apex:pageblockSectionItem id="Credits">
                    <apex:outputLabel id="Label" value="Standard Credits" for="Field"/>
                    <apex:panelGroup >
                        <apex:outputText id="Field" value="Unknown" />
                        <a style="margin-left:20px;" href="http://www.postcodeanywhere.co.uk/appexchange/buy.aspx?f=PostcodeAnywhereInternational" target="_blank">Buy</a>
                    </apex:panelGroup>
                </apex:pageblockSectionItem>
                <apex:inputField value="{!Settings.pca__User_License__c}" id="RoyalMailKey"/>
                <apex:pageblockSectionItem id="Licenses">
                    <apex:outputLabel id="Label" value="User Licenses (UK Only)" for="Field"/>
                    <apex:panelGroup >
                        <apex:outputText id="Field" value="Unknown" />
                        <a style="margin-left:20px;" href="http://www.postcodeanywhere.co.uk/appexchange/buy.aspx?f=PostcodeAnywhere" target="_blank">Buy</a>
                    </apex:panelGroup>
                </apex:pageblockSectionItem>
            </apex:pageBlockSection>
            <apex:pageBlockSection id="Country" columns="1" title="Countries">
                <apex:inputField id="lstNameStyle" value="{!Settings.pca__Country_Name_Style__c}"/>
                <apex:pageBlockSectionItem id="List">
                    <apex:outputLabel value="Dropdown List Contents"/>
                    <apex:panelGrid columns="4">
                        <apex:panelGrid columns="1">
                            <apex:outputLabel value="Hidden" for="Available"/>
                            <select style="width:200px" id="lstAvailable" size="10" multiple="multiple"/>
                        </apex:panelGrid>
                        <apex:panelGroup >
                            <apex:panelGrid columns="1"><br/>
                                <apex:outputText value="Fill"/>
                                <apex:image value="/s.gif" styleClass="rightArrowIcon" style="cursor:pointer" onclick="fillList()"/> 
                                <apex:outputText value="Add"/>
                                <apex:image value="/s.gif" styleClass="rightArrowIcon" style="cursor:pointer" onclick="addOption()"/> 
                                <apex:image value="/s.gif" styleClass="leftArrowIcon" style="cursor:pointer" onclick="removeOption()"/> 
                                <apex:outputText value="Remove"/>
                                <apex:image value="/s.gif" styleClass="leftArrowIcon" style="cursor:pointer" onclick="clearList()"/> 
                                <apex:outputText value="Clear"/>
                             </apex:panelGrid>
                        </apex:panelGroup>
                        <apex:panelGrid columns="1">
                            <apex:outputLabel value="Displayed" for="Selected"/>
                            <select style="width:200px" id="lstSelected" size="10" multiple="multiple"/>
                        </apex:panelGrid>
                        <apex:panelGroup >
                            <apex:panelGrid columns="1"><br/>
                                <apex:outputText value="Top"/>
                                <apex:image value="/s.gif" styleClass="upArrowIcon" style="cursor:pointer" onclick="optionTop()"/> 
                                <apex:outputText value="Up"/>
                                <apex:image value="/s.gif" styleClass="upArrowIcon" style="cursor:pointer" onclick="optionUp()"/> 
                                <apex:image value="/s.gif" styleClass="downArrowIcon" style="cursor:pointer" onclick="optionDown()"/> 
                                <apex:outputText value="Down"/>
                                <apex:image value="/s.gif" styleClass="downArrowIcon" style="cursor:pointer" onclick="optionBottom()"/> 
                                <apex:outputText value="Bottom"/>
                            </apex:panelGrid>
                      </apex:panelGroup>
                    </apex:panelGrid>
                </apex:pageBlockSectionItem>
                <apex:inputHidden id="Options" value="{!Settings.pca__Country_List__c}"/>
            </apex:pageBlockSection>
            <apex:pageBlockSection title="Additional Options">
                <apex:inputField value="{!Settings.pca__Use_International_Data__c}" />
                <apex:inputField value="{!Settings.pca__Use_Royal_Mail_UK_Data__c}" />
                <apex:inputField value="{!Settings.pca__Royal_Mail_Company__c}"/>
                <apex:inputField value="{!Settings.pca__Royal_Mail_Reverse__c}"/>
                <apex:inputField value="{!Settings.pca__Use_USPS_Data__c}"/>
                <apex:inputField value="{!Settings.pca__USPS_Reverse__c}"/>
                <apex:inputField value="{!Settings.pca__BACS_Validation__c}"/>
                <apex:inputField value="{!Settings.pca__Email_Validation__c}"/>
                <apex:inputField value="{!Settings.pca__Disable_Field_Rearrange__c}"/>
                <apex:inputField value="{!Settings.pca__Disable_Country_List__c}"/>
                <apex:inputField value="{!Settings.pca__Disable_Other_Country_Option__c}"/>
                <apex:inputField value="{!Settings.pca__Hide_Sidebar_Component__c}"/>
            </apex:pageBlockSection>
        </apex:pageBlock>
    </apex:form>
    <apex:relatedList list="Addresses__r" title="Address Integrations" subject="{!Settings.Id}"/>
    <apex:relatedList list="Payments__r" title="Payment Integrations" subject="{!Settings.Id}"/>
    <apex:relatedList list="Emails__r" title="Email Integrations" subject="{!Settings.Id}"/>
    <apex:relatedList list="Actions__r" title="Custom Actions" subject="{!Settings.Id}"/>
    
    <div id="pcaRegistration" style="display:none;width:500px;position:fixed;top:0px;left:0px;z-index:100;background-color:#f3f3eC;border:2px solid #6699cc;border-top-width:7px">
        <div style="border-bottom:1px solid #ffffff;color:#222222;font-size:91%;padding:2px;margin-bottom:2px;overflow:hidden;font-weight:bold;background-color: #eeecd1">
            Postcode Anywhere Registration
        </div>
        <div style="padding:0 10px 0 10px">
            <p>If you do not already have a Postcode Anywhere account you can sign up for one now, quickly and easily. The account is free, has no commitments and gives you 30 free lookups. If you have an existing Postcode Anywhere account just press cancel and enter your account details.</p></div>
            <table style="margin-left:80px;color:#333333;font-size:91%;font-weight:bold;text-align:right;margin-bottom:10px">
                <tr>
                    <td style="padding:2px 10px 2px 2px"><label for="txtForename">First Name</label></td>
                    <td style="text-align:left"><input type="text" id="txtForename" value="{!$User.FirstName}"/></td>
                </tr>
                <tr>
                    <td style="padding:2px 10px 2px 2px"><label for="txtSurname">Last Name</label></td>
                    <td style="text-align:left"><input type="text" id="txtSurname" value="{!$User.LastName}"/></td>
                </tr>
                <tr>
                    <td style="padding:2px 10px 2px 2px"><label for="txtEmail">Email</label></td>
                    <td style="text-align:left"><div style="position:relative"><div style="background-color:#cc0000;bottom:1px;top:1px;left:-4px;width:3px;position:absolute"></div><input type="text" id="txtEmail" value="{!$User.Email}"/></div><div id="errorEmail" style="color:#cc0000;font-weight:normal;font-size:small"></div></td>
                </tr>
                <tr>
                    <td style="padding:2px 10px 2px 2px"><label for="txtPhone">Phone</label></td>
                    <td style="text-align:left"><input type="text" id="txtPhone" value="{!$User.Phone}"/></td>
                </tr>
                <tr>
                    <td style="padding:2px 10px 2px 2px"><label for="txtCompanyName">Company</label></td>
                    <td style="text-align:left"><input type="text" id="txtCompanyName" value="{!$User.CompanyName}"/></td>
                </tr>
                <tr>
                    <td style="padding:2px 10px 2px 2px"><label for="txtStreet">Street</label></td>
                    <td style="text-align:left"><textarea type="text" wrap="soft" cols="27" rows="2" id="txtStreet" maxlength="255" style="font-size:small">{!$User.Street}</textarea></td>
                </tr>
                <tr>
                    <td style="padding:2px 10px 2px 2px"><label for="txtCity">City</label></td>
                    <td style="text-align:left"><input type="text" id="txtCity" value="{!$User.City}"/></td>
                </tr>
                <tr>
                    <td style="padding:2px 10px 2px 2px"><label for="txtState">State/Province</label></td>
                    <td style="text-align:left"><input type="text" id="txtState" value="{!$User.State}"/></td>
                </tr>
                <tr>
                    <td style="padding:2px 10px 2px 2px"><label for="txtPostcode">Zip/Postal Code</label></td>
                    <td style="text-align:left"><input type="text" id="txtPostcode" value="{!$User.PostalCode}"/></td>
                </tr>
                <tr>
                    <td style="padding:2px 10px 2px 2px"><label for="txtCountry">Country</label></td>
                    <td style="text-align:left"><div style="position:relative"><div style="background-color:#cc0000;bottom:1px;top:1px;left:-4px;width:3px;position:absolute"></div><input type="text" id="txtCountry" value="{!$User.Country}"/></div><div id="errorCountry" style="color:#cc0000;font-weight:normal;font-size:small"></div></td>
                </tr>
                <tr>
                    <td style="padding:2px 10px 2px 2px"><label for="txtPassword">Password</label></td>
                    <td style="text-align:left"><div style="position:relative"><div style="background-color:#cc0000;bottom:1px;top:1px;left:-4px;width:3px;position:absolute"></div><input type="password" id="txtPassword"/></div><div id="errorPassword" style="color:#cc0000;font-weight:normal;font-size:small"></div></td>
                </tr>
                <tr>
                    <td style="padding:2px 10px 2px 2px"><label for="txtConfirm">Confirm Password</label></td>
                    <td style="text-align:left"><input type="password" id="txtConfirm"/><div id="errorConfirm" style="color:#cc0000"></div></td>
                </tr>
            </table>
            <div style="position:relative;bottom:0;border:0px solid #6699cc;border-top-width:1px">
                <div style="text-align:center;height:20px;padding:2px">
                    <input type="submit" value="Register" class="btn" onclick="register()"/>&nbsp;<input type="submit" value="Cancel" class="btn" onclick="closeRegister()"/>
                </div>
            </div>
    </div>
    
    <script type="text/javascript">
        var _keyfield = document.getElementById("{!$Component.Management.Settings.Account.StandardKey}"),
            _userfield = document.getElementById("{!$Component.Management.Settings.Account.RoyalMailKey}"),
            _balancefield = document.getElementById("{!$Component.Management.Settings.Account.Credits.Field}"),
            _licensefield = document.getElementById("{!$Component.Management.Settings.Account.Licenses.Field}"),
            _licenselabel = document.getElementById("{!$Component.Management.Settings.Account.Licenses.Label}"),
            _availablelist = document.getElementById("lstAvailable"),
            _selectedlist = document.getElementById("lstSelected"),
            _selectedfield = document.getElementById("{!$Component.Management:Settings:Country:Options}"),
            _namestylelist = document.getElementById("{!$Component.Management:Settings:Country:lstNameStyle}"),
            _regbackground = document.createElement("div"),
            _regcontent = document.createElement("div"),
            _licenses = false;

        function SaveMessage() {
            alert('Settings have been updated, browser cache will need to be cleared before settings take effect');
        }

        function getCreditBalance() {
            if (_keyfield && _balancefield) {
                var _request = "/Management/CreditPacks/Balances/v1.00/json.ws?";
                _request += "&Key=" + escape(_keyfield.value);
                _request += "&CallbackFunction=getCreditBalanceEnd";
                fetch(_request, "Credits");
            }
        }

        function getCreditBalanceEnd(response) {
            if (response.length != 1 || typeof (response[0].Error) == 'undefined') {
                var _standardresult = null,
                    _internalresult = null;

                for (var i in response) {
                    if (typeof (response[i].Type) != "undefined" && response[i].Type == "Standard")
                        _standardresult = response[i].Balance;
                     if (typeof (response[i].Type) != "undefined" && response[i].Type == "InternalFullPaf")
                        _internalresult = response[i].Balance;
                }

                if (_standardresult)
                    _balancefield.innerHTML = _standardresult;
                else
                    _balancefield.innerHTML = "0";
                    
                if (_internalresult && !_licenses) {
                    _licenselabel.innerHTML = "Internal Credits (UK Only)";
                    _licensefield.innerHTML = _internalresult;
                }
                else
                    _licensefield.innerHTML = "0";
            }
            else
                _balancefield.innerHTML = "Unknown";
        }

        function getLicenseBalance() {
            if (_userfield && _licensefield) {
                var _request = "/Management/Licenses/Balances/v1.00/json.ws?";
                _request += "&Key=" + escape(_userfield.value);
                _request += "&CallbackFunction=getLicenseBalanceEnd";
                fetch(_request, "License");
            }
        }

        function getLicenseBalanceEnd(response) {
            if (response.length != 1 || typeof (response[0].Error) == 'undefined') {
                var _result = null;

                for (var i in response) {
                    if ((typeof (response[i].Level) != "undefined" && response[i].Level == "FullPaf") &&
                       (typeof (response[i].Model) != "undefined" && response[i].Model == "PerUser"))
                        _result = response[i].Total + " / " + response[i].Available;
                }

                if (_result) {
                    _licenses = true;
                    _licenselabel.innerHTML = "User Licenses (UK Only)";
                    _licensefield.innerHTML = _result;
                }
                else
                    _licensefield.innerHTML = "0";
            }
            else
                _licensefield.innerHTML = "Unknown";
        }

        function showRegister() {
            var _body = document.body,
                _posx = (_body.offsetWidth / 2) - 250,
                _posy = (_body.scrollTop || _body.parentNode.scrollTop) + 100;
                
            _regcontent = document.getElementById("pcaRegistration");
            _regcontent.style.top = _posy + "px";
            _regcontent.style.left = _posx + "px";
            _regcontent.style.display = "";
            _regbackground = document.createElement("div");
            _regbackground.style.cssText = "position:fixed;_position:absolute;height:100%;width:100%;top:0px;left:0px;z-index:99;background-color:#000000;filter:alpha(opacity=60);opacity:0.6;";
            _body.appendChild(_regbackground);
        }

        function closeRegister() {
            _regcontent.style.display = "none";
            _regbackground.style.display = "none";
        }

        function register() {
            var _forename = document.getElementById("txtForename"),
                _surname = document.getElementById("txtSurname"),
                _email = document.getElementById("txtEmail"),
                _phone = document.getElementById("txtPhone"),
                _company = document.getElementById("txtCompanyName"),
                _street = document.getElementById("txtStreet"),
                _city = document.getElementById("txtCity"),
                _state = document.getElementById("txtState"),
                _postcode = document.getElementById("txtPostcode"),
                _country = document.getElementById("txtCountry"),
                _password = document.getElementById("txtPassword"),
                _confirm = document.getElementById("txtConfirm"),
                _errorEmail = document.getElementById("errorEmail"),
                _errorCountry = document.getElementById("errorCountry"),
                _errorPassword = document.getElementById("errorPassword"),
                _errorConfirm = document.getElementById("errorConfirm"),
                _streets = _street.value.split("\n");

            if (_email.value == "") { _errorEmail.innerHTML = "Error: You must enter a value"; return } else _errorEmail.innerHTML = "";
            if (_country.value == "") { _errorCountry.innerHTML = "Error: You must enter a value"; return } else _errorCountry.innerHTML = "";
            if (_password.value == "") { _errorPassword.innerHTML = "Error: You must enter a value"; return } else _errorPassword.innerHTML = "";
            if (_password.value != _confirm.value) { _errorConfirm.innerHTML = "Error: Passwords must match"; return } else _errorConfirm.innerHTML = "";

            var _request = "/Management/Accounts/Add/v1.00/json.ws?";
            _request += "&Key=KT79-MT84-XR94-DK35";
            _request += "&Source=Salesforce";
            if (_forename.value != "") _request += "&Forename=" + escape(_forename.value)
            if (_surname.value != "") _request += "&Surname=" + escape(_surname.value);
            _request += "&Email=" + escape(_email.value);
            if (_phone.value != "") _request += "&Phone=" + escape(_phone.value);
            if (_company.value != "") _request += "&CompanyName=" + escape(_company.value);
            if (_streets[0] != "") _request += "&Line1=" + escape(_streets[0]);
            if (_streets[1] != "") _request += "&Line2=" + escape(_streets[1]);
            if (_streets[2] != "") _request += "&Line3=" + escape(_streets[2]);
            if (_city.value != "") _request += "&City=" + escape(_city.value);
            if (_state.value != "") _request += "&CountyOrState=" + escape(_state.value);
            if (_postcode.value != "") _request += "&PostalCode=" + escape(_postcode.value);
            _request += "&Country=" + escape(_country.value);
            _request += "&Password=" + escape(_password.value);
            _request += "&CallbackFunction=registerEnd";

            fetch(_request, "Register");
        }

        function registerEnd(response) {
            if (response.length != 1 || typeof (response[0].Error) == 'undefined') {
                if (response.length != 0) {
                    if (_keyfield) {
                        _keyfield.value = response[0].ClickKey;
                        getCreditBalance();
                    }
                    if (_userfield) {
                        _userfield.value = response[0].UserKey;
                        getLicenseBalance();
                    }
                }

                closeRegister();
            }
            else {
                alert(response[0].Description);
            }
        }

        function fetch(request, token) {
            var _script = document.getElementById("pcaScript" + token);
            var _head = document.getElementsByTagName("head").item(0);

            if (_script) try { _head.removeChild(_script) } catch (e) { };

            _script = document.createElement("script");
            _script.src = "https://services.postcodeanywhere.co.uk" + request;
            _script.type = "text/javascript";
            _script.id = "pcaScript" + token;
            _head.appendChild(_script);
        }

        function initList() {
            var _selection = _selectedfield.value.split(","),
                _countrydata = pca_CountryData;

            _selectedlist.options.length = 0;
            _availablelist.options.length = 0;

            for (var i in _countrydata)
                _availablelist.options[_availablelist.options.length] = new Option(_countrydata[i].n, _countrydata[i].i3);

            for (var s in _selection) {
                for (var i = 0; i < _availablelist.options.length; i++) {
                    if (_selection[s] == _availablelist.options[i].value)
                        moveOption(i, _availablelist, _selectedlist);
                }
            }
        }

        function fillList() {
            while (_availablelist.options.length)
                moveOption(0, _availablelist, _selectedlist);

            updateSelectedOptions()
        }

        function clearList() {
            var _countrydata = pca_CountryData;

            _selectedlist.options.length = 0;
            _availablelist.options.length = 0;

            for (var i in _countrydata)
                _availablelist.options[_availablelist.options.length] = new Option(_countrydata[i].n, _countrydata[i].i3)

            updateSelectedOptions()
        }

        function addOption() {
            for (var i = 0; i < _availablelist.options.length; i++) {
                if (_availablelist.options[i].selected) {
                    moveOption(i, _availablelist, _selectedlist);
                    i--;
                }
            }

            updateSelectedOptions()
        }

        function removeOption() {
            for (var i = 0; i < _selectedlist.options.length; i++) {
                if (_selectedlist.options[i].selected) {
                    moveOption(i, _selectedlist, _availablelist);
                    i--;
                }
            }

            updateSelectedOptions()
        }

        function moveOption(index, from, to) {
            var _source = from.options[index],
                _option = new Option(_source.text, _source.value);

            to.options[to.options.length] = _option;
            from.remove(index);
        }

        function optionUp() {
            var _index = _selectedlist.selectedIndex;

            if (_index > 0) {
                swapOptions(_selectedlist.options[_index], _selectedlist.options[_index - 1]);
                _selectedlist.selectedIndex--;
            }

            updateSelectedOptions()
        }

        function optionDown() {
            var _index = _selectedlist.selectedIndex;

            if (_index < (_selectedlist.options.length - 1)) {
                swapOptions(_selectedlist.options[_index], _selectedlist.options[_index + 1]);
                _selectedlist.selectedIndex++;
            }

            updateSelectedOptions()
        }

        function optionTop() {
            var _index = _selectedlist.selectedIndex;

            while (_index > 0) {
                swapOptions(_selectedlist.options[_index], _selectedlist.options[_index - 1]);
                _index--;
            }

            _selectedlist.selectedIndex = 0;

            updateSelectedOptions()
        }

        function optionBottom() {
            var _index = _selectedlist.selectedIndex;

            while (_index < (_selectedlist.options.length - 1)) {
                swapOptions(_selectedlist.options[_index], _selectedlist.options[_index + 1]);
                _index++;
            }

            _selectedlist.selectedIndex = _selectedlist.options.length - 1;

            updateSelectedOptions()
        }

        function swapOptions(x, y) {
            var _temp = new Option(x.text, x.value);
            x.text = y.text;
            x.value = y.value;
            y.text = _temp.text;
            y.value = _temp.value;
        }

        function updateSelectedOptions() {
            var _items = [];

            for (var i = 0; i < _selectedlist.options.length; i++)
                _items.push(_selectedlist.options[i].value);

            _selectedfield.value = _items.join(",");
        }

        function managementInit() {
            initList();
    
            if ((_keyfield && _userfield) && (_keyfield.value == "" && _userfield.value == ""))
                sfdcPage.appendToOnloadQueue(showRegister, "Postcode Anywhere Register");
    
            if (_keyfield) _keyfield.onchange = getCreditBalance;
            if (_userfield) _userfield.onchange = getLicenseBalance;
    
            getCreditBalance(); //"Get PCA Credit Balance"
            getLicenseBalance(); //"Get PCA License Pool"
            
            if (_namestylelist) {
                if (_namestylelist.options[0].text == "--None--")
                    _namestylelist.remove(0);
            }
        }
        
        sfdcPage.appendToOnloadQueue(managementInit);
    </script>
</apex:page>